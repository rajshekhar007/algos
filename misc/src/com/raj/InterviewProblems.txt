1> Group or Sort(similar) anagrams -> abc, mat, cab, ban, tam, bac, nab => {abc,cab,bac}, {mat,tam}, {nab,ban}

2> Find longest common prefix, given a list of strings -> abcde, abcmn, abkl, abz => {ab}

3> Given 2 nodes in a binary tree with pointers to parent node, find Least Common Ancestor

4> Permute abc -> abc, acb, bac, bca, cab, cba

5> Permute 123 to ascii chars -> abc, lc, aw

6> Needle in Haystack -> abcdefgh lmnopqr => def

7> Merge overlapping intervals. Given [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] would result in [1,2],[3,10],[12,16].
This is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10]. Make sure the returned intervals are also sorted.

8> Find Largest number formed from : 3,30,34,5,9 => 9 5 34 3 30

9> Find merging point of 2 linked list.

10> "aabbbccddde"  => "abcde", "a2b3c2d3e"

11> Find minimum levels of binary tree
        1 <- Root
       / \
      2   3     =>   2
     / \
    4   5

12> Design LRU cache.

13>
How would he scale an API or span an application onto multiple machines and what problems would they cause?
How would he store Strings for faster retrieval if they are being used in a type-ahead field?
A coding question.
REST API method selection and usage with emphasis on idempotency.
HashMap & Immutability.
Some behavioral questions like why is he looking for new positions and what interested him in Walmart?
Git process and some other CI/CD stuff.

14> DP - Min cost of cutting a rod. Knapsack problem.

15>
